list.files("specdata")
?listfiles
list.files
?list.files
list.files("specdata")
list.files("./specdata")
debugSource('D:/Workspace/R-WD/pollutantmean.R')
pollutantmean("specdata","nitrate",id=23)
pollutantmean("specdata","nitrate",id=23)
getwd()
setwd("D:/Workspace/R-WD")
getwd()
list.files("./specdata")
list.files(directory)
pollutantmean <- function(directory, pollutant, id = 1:321) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
#filename<-paste(directory,"/",id,".csv",sep="")
require(data.table)
#setwd(directory)
file_list <- list.files(directory)
dataset = rbindlist(lapply( file_list, fread ))
pollutant_set <-data.frame()
for (i in id){
temp_subset <- subset(dataset,dataset$ID==i,select=pollutant)
#temp_vect <-read.table(file, header=TRUE)
if(length(pollutant_set)>0)
pollutant_set<-rbind(pollutant_set, temp_dataset)
else
pollutant_set<- temp_subset
rm(temp_subset)
}
pollutant_mean <- colMeans(pollutant_set,na.rm=TRUE,dims=1)
pollutant_vect<-as.vector(pollutant_mean)
pollutant_vect
#pollutant
#pollutant_vect<-polfile$pollutant
#pollutant_vect
#mean(as.numeric(pollutant_vect),na.rm=TRUE)
#for(i in id)
#{
#}
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
}
pollutantmean("specdata","nitrate",id=23)
file_list <- list.files(directory)
str(file_list)
dataset = rbindlist(lapply( file_list, fread ))
setwd(directory)
getwd()
dataset = rbindlist(lapply( file_list, fread ))
pollutantmean <- function(directory, pollutant, id = 1:321) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
#filename<-paste(directory,"/",id,".csv",sep="")
require(data.table)
#setwd(directory)
file_list <- list.files(directory)
setwd(directory)
dataset = rbindlist(lapply( file_list, fread ))
pollutant_set <-data.frame()
for (i in id){
temp_subset <- subset(dataset,dataset$ID==i,select=pollutant)
#temp_vect <-read.table(file, header=TRUE)
if(length(pollutant_set)>0)
pollutant_set<-rbind(pollutant_set, temp_dataset)
else
pollutant_set<- temp_subset
rm(temp_subset)
}
pollutant_mean <- colMeans(pollutant_set,na.rm=TRUE,dims=1)
pollutant_vect<-as.vector(pollutant_mean)
pollutant_vect
#pollutant
#pollutant_vect<-polfile$pollutant
#pollutant_vect
#mean(as.numeric(pollutant_vect),na.rm=TRUE)
#for(i in id)
#{
#}
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
}
setwd("D:/Workspace/R-WD")
getwd()
setwd("c:/temp")
file_list <- list.files(directory)
file_list
setwd("D:/Workspace/R-WD")
file_list <- list.files(directory)
file_list
pollutantmean <- function(directory, pollutant, id = 1:321) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
#filename<-paste(directory,"/",id,".csv",sep="")
require(data.table)
#setwd(directory)
file_list <- list.files(directory)
setwd(directory)
dataset = rbindlist(lapply( file_list, fread ))
pollutant_set <-data.frame()
for (i in id){
temp_subset <- subset(dataset,dataset$ID==i,select=pollutant)
#temp_vect <-read.table(file, header=TRUE)
if(length(pollutant_set)>0)
pollutant_set<-rbind(pollutant_set, temp_dataset)
else
pollutant_set<- temp_subset
rm(temp_subset)
}
pollutant_mean <- colMeans(pollutant_set,na.rm=TRUE,dims=1)
pollutant_vect<-as.vector(pollutant_mean)
pollutant_vect
#pollutant
#pollutant_vect<-polfile$pollutant
#pollutant_vect
#mean(as.numeric(pollutant_vect),na.rm=TRUE)
#for(i in id)
#{
#}
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
}
pollutantmean("specdata","nitrate",id=23)
pollutantmean("specdata","nitrate",id=70)
file_list <- list.files(.)
file_list <- list.files(./\)
file_list <- list.files(./)
file_list <- list.files("./")
file_list
file_list <- list.files(".")
file_list
pollutantmean <- function(directory, pollutant, id = 1:321) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
#filename<-paste(directory,"/",id,".csv",sep="")
require(data.table)
#setwd(directory)
setwd(directory)
file_list <- list.files(".")
#setwd(directory)
dataset = rbindlist(lapply( file_list, fread ))
pollutant_set <-data.frame()
for (i in id){
temp_subset <- subset(dataset,dataset$ID==i,select=pollutant)
#temp_vect <-read.table(file, header=TRUE)
if(length(pollutant_set)>0)
pollutant_set<-rbind(pollutant_set, temp_dataset)
else
pollutant_set<- temp_subset
rm(temp_subset)
}
pollutant_mean <- colMeans(pollutant_set,na.rm=TRUE,dims=1)
pollutant_vect<-as.vector(pollutant_mean)
pollutant_vect
#pollutant
#pollutant_vect<-polfile$pollutant
#pollutant_vect
#mean(as.numeric(pollutant_vect),na.rm=TRUE)
#for(i in id)
#{
#}
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
}
pollutantmean("specdata","nitrate",id=70)
getwd()
setwd(directory)
pollutantmean <- function(directory, pollutant, id = 1:321) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
#filename<-paste(directory,"/",id,".csv",sep="")
require(data.table)
#setwd(directory)
#setwd(directory)
file_list <- list.files(".")
#setwd(directory)
dataset = rbindlist(lapply( file_list, fread ))
pollutant_set <-data.frame()
for (i in id){
temp_subset <- subset(dataset,dataset$ID==i,select=pollutant)
#temp_vect <-read.table(file, header=TRUE)
if(length(pollutant_set)>0)
pollutant_set<-rbind(pollutant_set, temp_dataset)
else
pollutant_set<- temp_subset
rm(temp_subset)
}
pollutant_mean <- colMeans(pollutant_set,na.rm=TRUE,dims=1)
pollutant_vect<-as.vector(pollutant_mean)
pollutant_vect
#pollutant
#pollutant_vect<-polfile$pollutant
#pollutant_vect
#mean(as.numeric(pollutant_vect),na.rm=TRUE)
#for(i in id)
#{
#}
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
}
pollutantmean("specdata","nitrate",id=70)
pollutantmean("specdata","nitrate",id=23)
pollutantmean("specdata","nitrate",id=70:72)
pollutantmean("specdata","nitrate",id=23)
pollutantmean("specdata","nitrate",id=70)
pollutantmean <- function(directory, pollutant, id = 1:321) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
#filename<-paste(directory,"/",id,".csv",sep="")
require(data.table)
#setwd(directory)s
#setwd(directory)
file_list <- list.files(".")
#setwd(directory)
dataset = rbindlist(lapply( file_list, fread ))
pollutant_set <-data.frame()
for (i in id){
temp_subset <- subset(dataset,dataset$ID==i,select=pollutant)
#temp_vect <-read.table(file, header=TRUE)
if(length(pollutant_set)>0)
pollutant_set<-rbind(pollutant_set, temp_subset)
else
pollutant_set<- temp_subset
rm(temp_subset)
}
pollutant_mean <- colMeans(pollutant_set,na.rm=TRUE,dims=1)
pollutant_vect<-as.vector(pollutant_mean)
pollutant_vect
#pollutant
#pollutant_vect<-polfile$pollutant
#pollutant_vect
#mean(as.numeric(pollutant_vect),na.rm=TRUE)
#for(i in id)
#{
#}
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
}
pollutantmean("specdata","nitrate",id=70)
pollutantmean("specdata","nitrate",id=23)
pollutantmean("specdata","nitrate",id=70:72)
pollutantmean("specdata","sulfate",id=1:10)
source('D:/Workspace/R-WD/pollutantmean.R')
pollutantmean("specdata","sulfate",id=1:10)
pollutantmean("specdata","nitrate",id=70:72)
pollutantmean("specdata","nitrate",id=23)
getwd()==directory
getwd()
compare
?compare
?contains
?match
?subset
parent_folder = getwd()
parent_folder %in% grep("^specdata", parent_folder, value = TRUE)
parent_folder %in% grep("specdata", parent_folder, value = TRUE)
parent_folder %in% grep(directory, parent_folder, value = TRUE)
parent_folder %in% grep(directory, parent_folder, value = FALSE)
setwd("D:/Workspace/R-WD")
parent_folder %in% grep(directory, parent_folder, value = FALSE)
getwd()
parent_folder = getwd()
parent_folder %in% grep(directory, parent_folder, value = FALSE)
parent_folder
directory
?grep
parent_folder %in% grep(directory, parent_folder, value = TRUE)
setwd(directory)
parent_folder = getwd()
parent_folder %in% grep(directory, parent_folder, value = TRUE)
setwd("D:/Workspace/R-WD")
getwd()
source('D:/Workspace/R-WD/pollutantmean.R')
pollutantmean("specdata", "nitrate", 23)
pollutantmean("specdata", "nitrate", 23)
getwd()
setwd("D:/Workspace/R-WD")
getwd()
parent_folder
parent_folder<-getwed()
parent_folder<-getwd()
parent_folder
parent_folder %in% grep(directory, parent_folder, value = TRUE)
pollutantmean("specdata", "nitrate", 23)
getwd()
parent_folder
parent_folder %in% grep(directory, parent_folder, value = TRUE)
parent_folder<-getwd()
change_folder <-parent_folder %in% grep(directory, parent_folder, value = TRUE)
change_folder
!change_folder
setwd(directory)
getwd()
parent_folder<-getwd()
change_folder <-parent_folder %in% grep(directory, parent_folder, value = TRUE)
change_folder
change_folder
!change_folder
parent_folder<-getwd()
source('D:/Workspace/R-WD/pollutantmean.R')
pollutantmean("specdata", "nitrate", 23)
pollutantmean("specdata", "nitrate", 23)
setwd("D:/Workspace/R-WD")
pollutantmean("specdata", "nitrate", 23)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 1:10)
?nrow
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
setwd("D:/Workspace/R-WD")
getwd()
source('D:/Workspace/R-WD/submitscript1.R')
submit()
submit()
source('D:/Workspace/R-WD/pollutantmean.R')
submit()
setwd("D:/Workspace/R-WD")
submit()
setwd("D:/Workspace/R-WD")
submit()
setwd("D:/Workspace/R-WD")
submit()
setwd("D:/Workspace/R-WD")
pollutantmean("specdata", "nitrate")
str(dataset)
?colMean
?colMeans
?mean
mean(dataset$nitrate,na.rm=TRUE)
source('D:/Workspace/R-WD/pollutantmean.R')
pollutantmean("specdata", "nitrate")
setwd("D:/Workspace/R-WD")
submit()
fileUrl <- "https://data.baltimorecity.gov/api/views/dz54-2aru/rows.csv?accessType=DOWNLOAD"
getwd()
setwd("../")
getwd()
download.file(fileUrl, destfile = "./data/cameras.csv")
download.file(fileUrl, destfile = "./data/cameras.csv")
?InternetOpenUrl
??InternetOpenUrl
install.packages("InternetOpenUrl")
fileUrl <- "https://data.baltimorecity.gov/api/views/dz54-2aru/rows.csv?accessType=DOWNLOAD"
download.file(fileUrl, destfile = "./data/cameras.csv")
?download.file
download.file(fileUrl, destfile = "./data/cameras.csv", method = "curl")
download.file(fileUrl, destfile = "./data/cameras.csv")
fileUrl <- "https:\\data.baltimorecity.gov\api\views\dz54-2aru\rows.csv?accessType=DOWNLOAD"
fileUrl <- "https://data.baltimorecity.gov/api/views/dz54-2aru/rows.csv?accessType=DOWNLOAD"
download.file(fileUrl, destfile = "./data/cameras.csv", method = "curl")
?read.csv
?downloader
download.file(fileUrl, destfile="cameras.csv")
install.packages("pROC")
??downloader
install.packages("downloader")
getwd()
??jsonlite
library(jsonlite)
jsonData <- fromJSON("https://api.github.com/users/jtleek/repos")
head(jsonData)
str(jsonData)
names(jsonData)
names(jsonData$owner)
jsonData$owner$login
polluant_set
myjson <- toJSON(iris, pretty=TRUE)
cat(myjson)
fileUrl <- "https://data.baltimorecity.gov/api/views/dz54-2aru/rows.xlsx?accessType=DOWNLOAD"
download.file(fileUrl,destfile="./data/cameras.xlsx")
getwd()
?setInternet2
download.file(fileUrl,destfile="./data/cameras.xlsx",method="internal")
?InternetOpenUrl
??InternetOpenUrl
??plyr
require(plyr)
require(pROC)
??pROC
install.packages("pROC")
library(xlsx)
install.packages("xlsx")
?InternetOpenUrl
??InternetOpenUrl
load(data.table)
?data.table
??data.table
require(data.table)
?data.table
library(data.table)
require(xlsx)
?download.file
fileUrl <- "https://data.baltimorecity.gov/api/views/dz54-2aru/rows.xlsx?accessType=DOWNLOAD"
download.file(fileUrl,destfile="./data/cameras.xlsx",method="curl")
download.file(fileUrl,destfile="./data/cameras.xlsx",method="internal")
download.file(fileUrl,destfile="./data/cameras.xlsx")
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
install.packages("xlsx")
?InternetOpenUrl
??InternetOpenUrl
fileUrl <- "https://data.baltimorecity.gov/api/views/dz54-2aru/rows.xlsx?accessType=DOWNLOAD"
download.file(fileUrl,destfile="./data/cameras.xlsx")
install.packages("InternetOpenUrl")
install.packages("pROC")
download.file(fileUrl,destfile="./data/cameras.xlsx")
library(xlsx)
?read.xlsx
q3 <- read.xlsx("./data/getdata-data-DATA.gov_NGAP.xlsx",sheetIndex=1,header=FALSE)
str(q3)
colIndex <-7:15
colIndex
rowIndex <- 18:23
dat <- read.xlsx("./data/getdata-data-DATA.gov_NGAP.xlsx",sheetIndex=1,colIndex=colIndex,rowIndex=rowIndex)
str(dat)
sum(dat$Zip*dat$Ext,na.rm=T)
library(XML)
install.packages("XML")
?xpathSApply
??xpathSApply
?xpathSApply
install.packages("xpathSApply")
?xpathApply
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileUrl,useInternal=TRUE)
library(XML)
doc <- xmlTreeParse(fileUrl,useInternal=TRUE)
fileUrl <- "D:/Workspace/R-WD/data/restaurants.xml"
doc <- xmlTreeParse(fileUrl,useInternal=TRUE)
?xmlTreeParse
fileUrl
fileUrl <- "D:/Workspace/R-WD/data/restaurants.xml"
doc <- xmlTreeParse(fileUrl,useInternal=TRUE)
doc<-xmlInternalTreeParse(fileUrl)
getwd()
setwd("D:/Workspace/R-WD/data")
fileUrl <- "restaurants.xml"
getwd()
doc<-xmlInternalTreeParse(fileUrl)
library(XML)
?xmlInternalTreeParse
file_list <- list.files(".")
file_list
fileUrl <- "restaurants.xml"
doc<-xmlInternalTreeParse(fileUrl)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
names(rootNode)
xpathSApply(rootNode,"//zipcode",xmlValue)
zip_vect <-xpathSApply(rootNode,"//zipcode",xmlValue)
length(zip_vectzip_vect)
length(zip_vect)
table(zip_vect)
?fread
?data.table
test<-data.table("getdata-data-ss06pid.csv")
str(test)
getwd()
?fread
DT<-fread("getdata-data-ss06pid.csv")
str(DT)
system.time(mean(DT$pwgtp15,by=DT$SEX)
)
system.time(mean(DT$pwgtp15,by=DT$SEX))
mean(DT$pwgtp15,by=DT$SEX)
system.time()
?system.time
mean(DT$pwgtp15,by=DT$SEX)
system.time(mean(DT$pwgtp15,by=DT$SEX))
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
DT[,mean(pwgtp15),by=SEX]
tapply(DT$pwgtp15,DT$SEX,mean)
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time()
sapply(split(DT$pwgtp15,DT$SEX),mean)
rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]
DT[,mean(pwgtp15),by=SEX]
tapply(DT$pwgtp15,DT$SEX,mean)
sapply(split(DT$pwgtp15,DT$SEX),mean)
sum(dat$Zip*dat$Ext,na.rm=T)
